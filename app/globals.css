@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "GeneralSans-Regular", sans-serif;
}

/* Font Family GeneralSans */
@font-face {
  font-family: "GeneralSans-Regular";
  src: url("/fonts/generalsans/GeneralSans-Regular.otf") format("opentype");
  font-weight: normal;
  font-style: normal;
}

/* Font Family Helvetica */
@font-face {
  font-family: "Helvetica-Bold";
  src: url("/fonts/helvetica/Helvetica-Bold.ttf") format("truetype");
  font-weight: bold;
  font-style: normal;
}

/* Font Family biliner */
@font-face {
  font-family: "Biliner Meclan";
  src: url("/fonts/biliner/Biliner Meclan.ttf") format("truetype");
  font-weight: normal;
  font-style: normal;
}

.bg-custom {
  background-image: url("../public/assets/hero-bg.svg");
}

.bg-custom-two {
  background-image: url("../public/assets/hero-bg-two.svg");
}

/* Animated border */
.btn-border {
  position: relative;
  width: 100%;
  border-radius: 37.1px;
  isolation: isolate;
  background-color: #3a8fff;
  display: flex;
  justify-content: center; /* Center horizontally */
  align-items: center;
  overflow: hidden;
}

.btn-border::before,
.btn-border::after {
  content: "";
  position: absolute;
}
.btn-border::before {
  content: ""; /* Create content for the pseudo-element */
  position: absolute;
  top: 4%; /* Vertically center the line */
  left: 50%; /* Center the rotation point */
  transform-origin: left center; /* Set rotation origin to the left side of the pseudo-element */
  width: 100%; /* Full width of the parent container */
  height: 51px; /* Line thickness */
  background: linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, #ffffff 100%);
  z-index: -1; /* Ensure it's behind the btn-border content */
  animation: btnBorder 8s linear infinite; /* Animate the rotation */
}

@keyframes btnBorder {
  0% {
    transform: rotateZ(0deg); /* Start at 0 degrees */
  }
  25% {
    transform: rotateZ(90deg); /* Move to a quarter rotation */
  }
  50% {
    transform: rotateZ(180deg); /* Halfway rotation */
  }
  75% {
    transform: rotateZ(270deg); /* Three-quarter rotation */
  }
  100% {
    transform: rotateZ(360deg); /* Full rotation */
  }
}

.btn-border::after {
  background-color: #3a8fff;
  /* inset: 2px; */
  border-radius: 37.1px;
}

/* stars orbit animation */
@keyframes orbit {
  0% {
    offset-distance: 0%;
  }
  100% {
    offset-distance: 100%;
  }
}

/* styles/globals.css or your preferred CSS file */

/* Define the bobbing animation */
@keyframes bobbing {
  0% {
    transform: translateY(0); /* Start at normal position */
  }
  50% {
    transform: translateY(-20px); /* Move upwards at 50% of the animation */
  }
  100% {
    transform: translateY(0); /* Return to the initial position */
  }
}

/* Define the left-to-right sliding animation */
@keyframes slide {
  0% {
    transform: translateX(-100vw); /* Start off-screen to the left */
  }
  100% {
    transform: translateX(100vw); /* Move off-screen to the right */
  }
}

/* Apply the floating text animation */
.floating-text {
  position: absolute;
  animation: bobbing 3s ease-in-out infinite,
    /* Bobbing up and down */ slide 20s linear infinite; /* Sliding from left to right */
  opacity: 0.8;
  will-change: transform; /* Hint to browser that the element is animated */
}

/* Randomize animation durations for variation */
.floating-text:nth-child(odd) {
  animation-duration: 3s, 15s; /* Different speeds for variation */
}

.floating-text:nth-child(even) {
  animation-duration: 3s, 18s;
}

.floating-text:nth-child(3) {
  animation-duration: 3s, 12s;
}

.floating-text:nth-child(4) {
  animation-duration: 3s, 20s;
}

.floating-text:nth-child(5) {
  animation-duration: 3s, 25s;
}
